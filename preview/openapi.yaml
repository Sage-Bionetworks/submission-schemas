openapi: 3.0.1
info:
  contact:
    email: thomas.yu@sagebionetworks.org
  description: |
    This is the submission API to obtain the metadata of the submission
    and send the submission to execute in the right workflow environment
  license:
    name: Apache-2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: challenge.org
  title: Submission API
  version: 1.0.0
servers:
- url: /
tags:
- description: Ceate and link synapse queues with workflow engines
  name: queue
- description: Allow synapse submissions to interact with supported workflow engines
  externalDocs:
    description: Mimics GA4GH
    url: https://github.com/ga4gh/workflow-execution-service-schemas
  name: workflow
- description: Submission and its metadata
  externalDocs:
    description: More about submission references
    url: https://rest-docs.synapse.org/rest/#org.sagebionetworks.repo.web.controller.EvaluationController
  name: submission
paths:
  /queue:
    post:
      description: Creates Synapse Queue
      operationId: queue_post
      responses:
        "200":
          content: {}
          description: OK
      summary: Create queue
      tags:
      - queue
      x-openapi-router-controller: openapi_server.controllers.queue_controller
  /queue/{queueId}:
    delete:
      description: Deletes Queue
      operationId: queue_queue_id_delete
      parameters:
      - description: ID of queue
        explode: false
        in: path
        name: queueId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content: {}
          description: OK
      summary: Deletes queue
      tags:
      - queue
      x-openapi-router-controller: openapi_server.controllers.queue_controller
    get:
      description: Get Queue
      operationId: queue_queue_id_get
      parameters:
      - description: ID of queue
        explode: false
        in: path
        name: queueId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content: {}
          description: OK
      summary: Get Queue
      tags:
      - queue
      x-openapi-router-controller: openapi_server.controllers.queue_controller
    put:
      description: updates queue
      operationId: queue_queue_id_put
      parameters:
      - description: ID of queue
        explode: false
        in: path
        name: queueId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content: {}
          description: OK
      summary: Updates queue
      tags:
      - queue
      x-openapi-router-controller: openapi_server.controllers.queue_controller
  /queue/{queueId}/logs:
    get:
      description: Monitors queue
      operationId: queue_queue_id_logs_get
      parameters:
      - description: ID of queue
        explode: false
        in: path
        name: queueId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content: {}
          description: OK
      summary: Monitor queue
      tags:
      - workflow
      x-openapi-router-controller: openapi_server.controllers.workflow_controller
  /submission:
    post:
      operationId: submit
      responses:
        "200":
          content: {}
          description: successful operation
      summary: Submits a submission
      tags:
      - submission
      x-openapi-router-controller: openapi_server.controllers.submission_controller
  /submission/{submissionId}:
    delete:
      operationId: delete_submission
      parameters:
      - description: ID of submission
        explode: false
        in: path
        name: submissionId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "400":
          content: {}
          description: Invalid ID supplied
        "404":
          content: {}
          description: Submission not found
      summary: Deletes a submission
      tags:
      - submission
      x-openapi-router-controller: openapi_server.controllers.submission_controller
    get:
      operationId: get_submission
      parameters:
      - description: ID of submission
        explode: false
        in: path
        name: submissionId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content: {}
          description: successful operation
        "400":
          content: {}
          description: Invalid submission value
      summary: Gets submission metadata
      tags:
      - submission
      x-openapi-router-controller: openapi_server.controllers.submission_controller
    put:
      operationId: update_submission
      parameters:
      - description: ID of submission
        explode: false
        in: path
        name: submissionId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "405":
          content: {}
          description: Invalid input
      summary: Updates a submission
      tags:
      - submission
      x-openapi-router-controller: openapi_server.controllers.submission_controller
  /submission/{submissionId}/cancel:
    post:
      operationId: cancel_submission
      parameters:
      - description: ID of submission
        explode: false
        in: path
        name: submissionId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content: {}
          description: successful operation
      summary: Creates cancel request
      tags:
      - workflow
      x-openapi-router-controller: openapi_server.controllers.workflow_controller
  /submission/{submissionId}/data:
    get:
      operationId: get_submission_data
      parameters:
      - description: ID of submission
        explode: false
        in: path
        name: submissionId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content: {}
          description: successful operation
        "400":
          content: {}
          description: Invalid submission value
      summary: Gets submission data
      tags:
      - submission
      x-openapi-router-controller: openapi_server.controllers.submission_controller
  /submission/{submissionId}/logs:
    get:
      operationId: get_submission_log
      parameters:
      - description: ID of submission
        explode: false
        in: path
        name: submissionId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content: {}
          description: successful operation
        "400":
          content: {}
          description: Invalid submission value
      summary: Gets submission log
      tags:
      - workflow
      x-openapi-router-controller: openapi_server.controllers.workflow_controller
  /submission/{submissionId}/output:
    get:
      description: Gets submission workflow output
      operationId: submission_submission_id_output_get
      parameters:
      - description: ID of submission
        explode: false
        in: path
        name: submissionId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content: {}
          description: OK
      summary: Get submission workflow output
      tags:
      - workflow
      x-openapi-router-controller: openapi_server.controllers.workflow_controller
  /submission/{submissionId}/restart:
    post:
      description: Restart submissions
      operationId: submission_submission_id_restart_post
      parameters:
      - description: ID of submission
        explode: false
        in: path
        name: submissionId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content: {}
          description: OK
      summary: Restart submissions
      tags:
      - workflow
      x-openapi-router-controller: openapi_server.controllers.workflow_controller
  /submission/{submissionId}/schedule:
    get:
      operationId: get_submission_run
      parameters:
      - description: ID of submission
        explode: false
        in: path
        name: submissionId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content: {}
          description: successful operation
        "400":
          content: {}
          description: Invalid submission value
      summary: Gets submission run
      tags:
      - workflow
      x-openapi-router-controller: openapi_server.controllers.workflow_controller
    post:
      operationId: run_submission
      parameters:
      - description: ID of submission
        explode: false
        in: path
        name: submissionId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content: {}
          description: successful operation
      summary: Schedules a submission workflow
      tags:
      - workflow
      x-openapi-router-controller: openapi_server.controllers.workflow_controller
  /submission/{submissionId}/status:
    get:
      description: Gets submission status
      operationId: submission_submission_id_status_get
      parameters:
      - description: ID of submission
        explode: false
        in: path
        name: submissionId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content: {}
          description: OK
      summary: Gets submission status
      tags:
      - workflow
      x-openapi-router-controller: openapi_server.controllers.workflow_controller
    put:
      description: Update submission status
      operationId: submission_submission_id_status_put
      parameters:
      - description: ID of submission
        explode: false
        in: path
        name: submissionId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content: {}
          description: OK
      summary: Update submission status
      tags:
      - workflow
      x-openapi-router-controller: openapi_server.controllers.workflow_controller
components:
  schemas:
    Queue:
      properties:
        queueId:
          format: int64
          type: integer
        trs_id:
          format: int64
          type: integer
        wes_default:
          default: local
          type: string
        wes_opts:
          items:
            type: string
          type: array
        workflow_attachments:
          items:
            format: binary
            type: string
          type: array
        workflow_type:
          default: CWL
          enum:
          - CWL
          - WDL
          - nextflow
          - kubeflow
          type: string
        workflow_inputs:
          properties: {}
          type: object
        workflow_url:
          format: binary
          type: string
        default_payload:
          properties: {}
          type: object
      type: object
    Submission:
      properties:
        id:
          format: int64
          type: integer
        submissionId:
          format: int64
          type: integer
        queueId:
          format: int64
          type: integer
        runId:
          description: Submission run id
          type: string
        submitter:
          description: Team submitting
          type: string
        createdOn:
          description: Time submission created
          format: date-time
          type: string
        methodDescription:
          description: Description of methodDescription
          type: string
        submissionType:
          description: Types of submissions
          enum:
          - file
          - docker
          - workflow
          type: string
        data:
          $ref: '#/components/schemas/Submission_data'
        workflow:
          $ref: '#/components/schemas/Submission_workflow'
      type: object
    Status:
      default: RECEIVED
      description: "* `RECEIVED`: Every submission starts in a RECEIVED state\n* `QUEUED`:\
        \ The task is queued.\n* `INITIALIZING`: The task has been assigned to a worker\
        \ and is currently preparing to run. For example, the worker may be turning\
        \ on, downloading input files, etc.\n* `RUNNING`: The task is running. Input\
        \ files are downloaded and the first Executor has been started.\n* `PAUSED`:\
        \ The task is paused. An implementation may have the ability to pause a task,\
        \ but this is not required.\n* `COMPLETE`: The task has completed running.\
        \ Executors have exited without error and output files have been successfully\
        \ uploaded.\n* `EXECUTOR_ERROR`: The task encountered an error in one of the\
        \ Executor processes. Generally, this means that an Executor exited with a\
        \ non-zero exit code.\n* `SYSTEM_ERROR`: The task was stopped due to a system\
        \ error, but not from an Executor, for example an upload failed due to network\
        \ issues, the worker's ran out of disk space, etc.\n* `CANCELED`: The task\
        \ was canceled by the user.\n* `CANCELING`: The task was canceled by the user,\
        \ and is in the process of stopping.    \n  "
      enum:
      - RECEIVED
      - QUEUED
      - INITIALIZING
      - RUNNING
      - PAUSED
      - COMPLETE
      - EXECUTOR_ERROR
      - SYSTEM_ERROR
      - CANCELED
      - CANCELING
      type: string
    Submission_data:
      properties:
        payload:
          description: JSON inputs to workflow
          format: binary
          type: string
        file:
          description: File submission
          format: binary
          type: string
        docker:
          description: Docker + shadigest submmission
          type: string
    Submission_workflow:
      properties:
        workflowType:
          description: Workflow type
          enum:
          - kubeflow
          - nextflow
          - cwl
          - wdl
          type: string
        workflow:
          description: Workflow URL or path
          format: binary
          type: string
