openapi: 3.0.3
info:
  contact:
    email: thomas.yu@sagebionetworks.org
  description: |
    This is the submission API to obtain the metadata of the submission
    and send the submission to execute in the right workflow environment
  license:
    name: Apache-2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
  termsOfService: challenge.org
  title: Submission API
  version: 1.0.0
servers:
  - url: ''
tags:
  - description: Ceate and link synapse queues with workflow engines
    name: Queue
  - description: Submission and its metadata
    externalDocs:
      description: More about submission references
      url: >-
        https://rest-docs.synapse.org/rest/#org.sagebionetworks.repo.web.controller.EvaluationController
    name: Submission
  - description: Health check
    name: HealthCheck
paths:
  /queues:
    post:
      tags:
        - Queue
      summary: Create a queue
      description: Creates a queue for storing and running of submissions
      operationId: createQueue
      parameters:
        - in: query
          name: queueId
          description: The ID of the queue that is being created
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateQueueRequest'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateQueueResponse'
          description: Success
        '400':
          $ref: '#/components/responses/BadRequest'
        '409':
          $ref: '#/components/responses/Conflict'
        '500':
          $ref: '#/components/responses/InternalServerError'
    get:
      tags:
        - Queue
      summary: List the available queues
      description: Returns the queues
      operationId: listQueues
      parameters:
        - $ref: '#/components/parameters/PageLimit'
        - $ref: '#/components/parameters/PageOffset'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListQueueResponse'
          description: Success
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/queues/{queueId}':
    parameters:
      - in: path
        name: queueId
        description: The ID of the queue
        required: true
        schema:
          type: string
    get:
      tags:
        - Queue
      summary: Get a queue by its ID
      description: Returns the queue for a given ID
      operationId: getQueue
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Queue'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'
    delete:
      tags:
        - Queue
      summary: Delete a queue by its ID
      description: Deletes the queue for a given ID
      operationId: deleteQueue
      responses:
        '204':
          description: The resource was deleted successfully.
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/queues/{queueId}/submissions':
    parameters:
      - in: path
        name: queueId
        description: The ID of the queue
        required: true
        schema:
          type: string
    post:
      tags:
        - Submission
      summary: Create a submission
      description: Creates a submission
      operationId: createSubmission
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSubmissionRequest'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateSubmissionResponse'
          description: Success
        '403':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/Conflict'
    get:
      tags:
        - Submission
      summary: List the submitted submissions
      description: Returns the submissions from a queue
      operationId: listSubmissions
      parameters:
        - $ref: '#/components/parameters/PageLimit'
        - $ref: '#/components/parameters/PageOffset'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSubmissionResponse'
          description: Success
        '403':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
  '/queues/{queueId}/submissions/{submissionId}':
    parameters:
      - in: path
        name: queueId
        description: The ID of the queue
        required: true
        schema:
          type: string
      - in: path
        name: submissionId
        description: The ID of the submission
        required: true
        schema:
          type: string
    get:
      tags:
        - Submission
      summary: Get a submission by its ID
      description: Returns the submission for a given ID
      operationId: getSubmission
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Submission'
        '403':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
    delete:
      tags:
        - Submission
      summary: Delete a submission by its ID
      description: Deletes the submission for a given ID
      operationId: deleteSubmission
      responses:
        '204':
          description: The resource was deleted successfully.
        '403':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /healthCheck:
    get:
      tags:
        - HealthCheck
      summary: Get health check information
      description: Get information about the health of the service
      operationId: getHealthCheck
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheck'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
components:
  parameters:
    PageLimit:
      in: query
      name: limit
      description: Maximum number of results returned
      required: false
      schema:
        type: integer
        default: 10
        minimum: 10
        maximum: 100
    PageOffset:
      in: query
      name: offset
      description: Index of the first result that must be returned
      required: false
      schema:
        type: integer
        default: 0
        minimum: 0
  schemas:
    ListResponseMetadata:
      type: object
      description: A page of results
      properties:
        offset:
          description: Index of the first result that must be returned
          type: integer
        limit:
          description: Maximum number of results returned
          type: integer
        links:
          description: Links to navigate to different pages of results
          type: object
          properties:
            next:
              description: Link to the next page of results
              type: string
        totalResults:
          description: The total number of results in the result set
          type: integer
      required:
        - offset
        - limit
        - links
        - totalResults
    Queue:
      type: object
      description: A Queue to link submissions to runtime
      properties:
        id:
          type: integer
          description: Queue Id
        name:
          type: string
          description: Name of Queue
        computeId:
          type: string
          description: Compute Environment Id
        workflowZip:
          type: string
          description: Link to github Workflow/Tool zip file
        workflowInput:
          description: Path to workflow to execute
          type: string
        createdOn:
          description: Time of creation
          type: string
          format: date-time
        submissionType:
          description: Path to workflow inputs
          type: string
          enum:
            - docker
            - file
            - workflow
            - workflow_inputs
    ListQueueResponse:
      type: object
      description: A page of queues
      allOf:
        - $ref: '#/components/schemas/ListResponseMetadata'
        - type: object
          properties:
            queues:
              description: An array of queues
              type: array
              items:
                $ref: '#/components/schemas/Queue'
    Error:
      type: object
      description: Problem details (tools.ietf.org/html/rfc7807)
      properties:
        title:
          type: string
          description: A human readable documentation for the problem type
        status:
          type: integer
          description: The HTTP status code
        detail:
          type: string
          description: >-
            A human readable explanation specific to this occurrence of the
            problem
        type:
          type: string
          description: An absolute URI that identifies the problem type
      required:
        - title
        - status
    CreateQueueRequest:
      type: object
      description: A Queue to link submissions to runtime
      properties:
        name:
          type: string
          description: Name of Queue
          minLength: 3
          maxLength: 60
          pattern: '^[a-z0-9]+(?:-[a-z0-9]+)*$'
        computeId:
          type: string
          description: Compute Environment Id
        workflowZip:
          type: string
          description: Link to github Workflow/Tool zip file
        workflowInput:
          description: Path to workflow inputs
          type: string
        workflowPath:
          description: The Path to executable workflow
          type: string
        submissionType:
          description: Path to workflow inputs
          type: string
          enum:
            - docker
            - file
            - workflow
            - workflow_inputs
      required:
        - name
    CreateQueueResponse:
      type: object
      description: Queue Id
      properties:
        queueId:
          type: string
          description: Queue ID
    SubmissionStatus:
      type: object
      description: Submission status
      properties:
        status:
          type: string
          description: Submission status
          enum:
            - received
            - submitted
            - evaluation_in_progress
            - invalid
            - accepted
            - rejected
        numberOfRuns:
          type: integer
          description: Number of times submission has been executed
    DockerSubmission:
      type: object
      description: A Docker Submission
      properties:
        name:
          type: string
          description: Name of submission
        id:
          type: integer
          description: Submission Id
        submitter:
          type: string
          description: Submitter name
        queueId:
          type: string
          description: Queue Id
        status:
          $ref: '#/components/schemas/SubmissionStatus'
        docker:
          type: object
          description: Docker repository
          properties:
            name:
              type: string
              description: Docker repository name
            digest:
              type: string
              description: Docker digest
            entrypoint:
              type: string
              description: >-
                Docker entrypoint.  The default assumes that the docker image is
                built with a predefined entrypoint.
          required:
            - name
            - digest
    FileSubmission:
      type: object
      description: A file Submission
      properties:
        name:
          type: string
          description: Name of submission
        id:
          type: integer
          description: Submission Id
        submitter:
          type: string
          description: Submitter name
        queueId:
          type: string
          description: Queue Id
        status:
          $ref: '#/components/schemas/SubmissionStatus'
        file:
          type: string
          description: File to submit to challenge
    WorkflowSubmission:
      type: object
      description: A workflow Submission
      properties:
        name:
          type: string
          description: Name of submission
        id:
          type: integer
          description: Submission Id
        submitter:
          type: string
          description: Submitter name
        queueId:
          type: string
          description: Queue Id
        status:
          $ref: '#/components/schemas/SubmissionStatus'
        workflow:
          type: string
          description: Workflow to run
        workflowInputs:
          type: string
          description: Worklfow inputs
      x-examples:
        example-1:
          name: string
          id: 0
          submitter: string
          queueId: string
          status:
            status: RECEIVED
            numberOfRuns: 0
          workflow: string
          workflowInputs: string
    Submission:
      oneOf:
        - $ref: '#/components/schemas/DockerSubmission'
        - $ref: '#/components/schemas/FileSubmission'
        - $ref: '#/components/schemas/WorkflowSubmission'
    ListSubmissionResponse:
      type: object
      description: A page of queues
      allOf:
        - $ref: '#/components/schemas/ListResponseMetadata'
        - type: object
          properties:
            submissions:
              description: An array of queues
              type: array
              items:
                $ref: '#/components/schemas/Submission'
    CreateDockerSubmissionRequest:
      type: object
      description: A Docker Submission
      properties:
        name:
          type: string
          description: Name of submission
        submitter:
          type: string
          description: Submitter name
        docker:
          type: object
          description: Docker repository
          properties:
            name:
              type: string
              description: Docker repository name
            digest:
              type: string
              description: Docker digest
            entrypoint:
              type: string
              description: >-
                Docker entrypoint.  The default assumes that the docker image is
                built with a predefined entrypoint.
          required:
            - name
            - digest
      required:
        - name
        - submitter
        - docker
    CreateFileSubmissionRequest:
      type: object
      description: A file Submission
      properties:
        name:
          type: string
          description: Name of submission
        submitter:
          type: string
          description: Submitter name
        file:
          type: string
          description: File to submit to challenge
      required:
        - name
        - submitter
        - file
    CreateWorkflowSubmissionRequest:
      type: object
      description: A workflow Submission
      properties:
        name:
          type: string
          description: Name of submission
        submitter:
          type: string
          description: Submitter name
        workflow:
          type: string
          description: Workflow to run
        workflowInputs:
          type: string
          description: Workflow inputs
      required:
        - name
        - submitter
    CreateSubmissionRequest:
      oneOf:
        - $ref: '#/components/schemas/CreateDockerSubmissionRequest'
        - $ref: '#/components/schemas/CreateFileSubmissionRequest'
        - $ref: '#/components/schemas/CreateWorkflowSubmissionRequest'
    CreateSubmissionResponse:
      type: object
      description: The ID of a submission.
      properties:
        submissionId:
          type: string
          description: Submission ID
    HealthCheck:
      type: object
      description: Represents the health of a service
      properties:
        status:
          description: Indicates whether the service status is acceptable or not
          type: string
          enum:
            - pass
            - fail
            - warn
      required:
        - status
  responses:
    BadRequest:
      description: Invalid request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    InternalServerError:
      description: The request cannot be fulfilled due to an unexpected server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Conflict:
      description: The request conflicts with current state of the target resource
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    NotFound:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
