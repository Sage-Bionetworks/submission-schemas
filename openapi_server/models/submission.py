# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.submission_data import SubmissionData
from openapi_server.models.submission_workflow import SubmissionWorkflow
from openapi_server import util

from openapi_server.models.submission_data import SubmissionData  # noqa: E501
from openapi_server.models.submission_workflow import SubmissionWorkflow  # noqa: E501

class Submission(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id=None, submission_id=None, queue_id=None, run_id=None, submitter=None, created_on=None, method_description=None, submission_type=None, data=None, workflow=None):  # noqa: E501
        """Submission - a model defined in OpenAPI

        :param id: The id of this Submission.  # noqa: E501
        :type id: int
        :param submission_id: The submission_id of this Submission.  # noqa: E501
        :type submission_id: int
        :param queue_id: The queue_id of this Submission.  # noqa: E501
        :type queue_id: int
        :param run_id: The run_id of this Submission.  # noqa: E501
        :type run_id: str
        :param submitter: The submitter of this Submission.  # noqa: E501
        :type submitter: str
        :param created_on: The created_on of this Submission.  # noqa: E501
        :type created_on: datetime
        :param method_description: The method_description of this Submission.  # noqa: E501
        :type method_description: str
        :param submission_type: The submission_type of this Submission.  # noqa: E501
        :type submission_type: str
        :param data: The data of this Submission.  # noqa: E501
        :type data: SubmissionData
        :param workflow: The workflow of this Submission.  # noqa: E501
        :type workflow: SubmissionWorkflow
        """
        self.openapi_types = {
            'id': int,
            'submission_id': int,
            'queue_id': int,
            'run_id': str,
            'submitter': str,
            'created_on': datetime,
            'method_description': str,
            'submission_type': str,
            'data': SubmissionData,
            'workflow': SubmissionWorkflow
        }

        self.attribute_map = {
            'id': 'id',
            'submission_id': 'submissionId',
            'queue_id': 'queueId',
            'run_id': 'runId',
            'submitter': 'submitter',
            'created_on': 'createdOn',
            'method_description': 'methodDescription',
            'submission_type': 'submissionType',
            'data': 'data',
            'workflow': 'workflow'
        }

        self._id = id
        self._submission_id = submission_id
        self._queue_id = queue_id
        self._run_id = run_id
        self._submitter = submitter
        self._created_on = created_on
        self._method_description = method_description
        self._submission_type = submission_type
        self._data = data
        self._workflow = workflow

    @classmethod
    def from_dict(cls, dikt) -> 'Submission':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Submission of this Submission.  # noqa: E501
        :rtype: Submission
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this Submission.


        :return: The id of this Submission.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Submission.


        :param id: The id of this Submission.
        :type id: int
        """

        self._id = id

    @property
    def submission_id(self):
        """Gets the submission_id of this Submission.


        :return: The submission_id of this Submission.
        :rtype: int
        """
        return self._submission_id

    @submission_id.setter
    def submission_id(self, submission_id):
        """Sets the submission_id of this Submission.


        :param submission_id: The submission_id of this Submission.
        :type submission_id: int
        """

        self._submission_id = submission_id

    @property
    def queue_id(self):
        """Gets the queue_id of this Submission.


        :return: The queue_id of this Submission.
        :rtype: int
        """
        return self._queue_id

    @queue_id.setter
    def queue_id(self, queue_id):
        """Sets the queue_id of this Submission.


        :param queue_id: The queue_id of this Submission.
        :type queue_id: int
        """

        self._queue_id = queue_id

    @property
    def run_id(self):
        """Gets the run_id of this Submission.

        Submission run id  # noqa: E501

        :return: The run_id of this Submission.
        :rtype: str
        """
        return self._run_id

    @run_id.setter
    def run_id(self, run_id):
        """Sets the run_id of this Submission.

        Submission run id  # noqa: E501

        :param run_id: The run_id of this Submission.
        :type run_id: str
        """

        self._run_id = run_id

    @property
    def submitter(self):
        """Gets the submitter of this Submission.

        Team submitting  # noqa: E501

        :return: The submitter of this Submission.
        :rtype: str
        """
        return self._submitter

    @submitter.setter
    def submitter(self, submitter):
        """Sets the submitter of this Submission.

        Team submitting  # noqa: E501

        :param submitter: The submitter of this Submission.
        :type submitter: str
        """

        self._submitter = submitter

    @property
    def created_on(self):
        """Gets the created_on of this Submission.

        Time submission created  # noqa: E501

        :return: The created_on of this Submission.
        :rtype: datetime
        """
        return self._created_on

    @created_on.setter
    def created_on(self, created_on):
        """Sets the created_on of this Submission.

        Time submission created  # noqa: E501

        :param created_on: The created_on of this Submission.
        :type created_on: datetime
        """

        self._created_on = created_on

    @property
    def method_description(self):
        """Gets the method_description of this Submission.

        Description of methodDescription  # noqa: E501

        :return: The method_description of this Submission.
        :rtype: str
        """
        return self._method_description

    @method_description.setter
    def method_description(self, method_description):
        """Sets the method_description of this Submission.

        Description of methodDescription  # noqa: E501

        :param method_description: The method_description of this Submission.
        :type method_description: str
        """

        self._method_description = method_description

    @property
    def submission_type(self):
        """Gets the submission_type of this Submission.

        Types of submissions  # noqa: E501

        :return: The submission_type of this Submission.
        :rtype: str
        """
        return self._submission_type

    @submission_type.setter
    def submission_type(self, submission_type):
        """Sets the submission_type of this Submission.

        Types of submissions  # noqa: E501

        :param submission_type: The submission_type of this Submission.
        :type submission_type: str
        """
        allowed_values = ["file", "docker", "workflow"]  # noqa: E501
        if submission_type not in allowed_values:
            raise ValueError(
                "Invalid value for `submission_type` ({0}), must be one of {1}"
                .format(submission_type, allowed_values)
            )

        self._submission_type = submission_type

    @property
    def data(self):
        """Gets the data of this Submission.


        :return: The data of this Submission.
        :rtype: SubmissionData
        """
        return self._data

    @data.setter
    def data(self, data):
        """Sets the data of this Submission.


        :param data: The data of this Submission.
        :type data: SubmissionData
        """

        self._data = data

    @property
    def workflow(self):
        """Gets the workflow of this Submission.


        :return: The workflow of this Submission.
        :rtype: SubmissionWorkflow
        """
        return self._workflow

    @workflow.setter
    def workflow(self, workflow):
        """Sets the workflow of this Submission.


        :param workflow: The workflow of this Submission.
        :type workflow: SubmissionWorkflow
        """

        self._workflow = workflow
